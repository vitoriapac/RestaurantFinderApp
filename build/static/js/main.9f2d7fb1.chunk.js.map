{"version":3,"sources":["redux/modules/restaurants.js","redux/reducers/index.js","redux/store.js","theme.js","assets/logo.svg","assets/restaurante-fake.png","components/Skeleton/index.jsx","components/ImageCard/index.jsx","components/RestaurantCard/styles.js","components/RestaurantCard/index.jsx","components/Modal/Portal/index.jsx","components/Modal/styles.js","components/Modal/index.jsx","components/Map/index.jsx","components/Loader/index.jsx","pages/Home/styles.js","pages/Home/index.jsx","App.js","serviceWorker.js","index.js"],"names":["Types","initialState","restaurants","restaurantSelected","setRestaurants","type","payload","setRestaurant","restaurant","combineReducers","state","action","store","createStore","rootReducer","theme","colors","primary","background","text","sucess","fonts","regular","KeyFramesLoading","keyframes","LoadingSkeleton","styled","div","props","width","height","Card","photo","Title","p","ImageCard","title","useState","imageLoaded","setImageLoaded","useEffect","imageLoader","Image","src","onload","Skeleton","Restaurant","RestaurantInfo","span","Address","RestaurantPhoto","img","RestaurantCard","onClick","name","count","isHalf","activeColor","edit","value","rating","vicinity","formatted_address","photos","getUrl","restaurante","onLoad","alt","PortalModal","children","portal","document","getElementById","ReactDOM","createPortal","Overlay","Dialog","Modal","open","onClose","onEsc","e","keyCode","window","addEventListener","removeEventListener","Portal","stopPropagation","GoogleApiWrapper","apiKey","process","language","dispatch","useDispatch","useSelector","map","setMap","google","query","placeId","onMapReady","_","center","service","maps","places","PlacesService","request","location","radius","nearbySearch","results","status","PlacesServiceStatus","OK","searchNearby","textSearch","searchByQuery","fields","getDetails","place","getRestaurantById","centerAroundCurrentLocation","onReady","onRecenter","position","lat","geometry","lng","place_id","defaultOptions","loop","autoplay","animationData","rendererSettings","preserveAspectRatio","options","Wrapper","Container","aside","Search","section","Logo","CarouselTitle","Slider","h1","ModalTitle","ModalContent","Home","inputValue","setInputValue","setQuery","setPlaceId","modalOpened","setModalOpened","logo","label","outlined","trailingIcon","role","icon","onKeyPress","key","onChange","target","length","dots","infinite","speed","slidesToShow","slidesToScroll","adaptiveheight","Loader","handleOpenModal","Map","formatted_phone_number","opening_hours","open_now","App","Boolean","hostname","match","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.9f2d7fb1.chunk.js","sourcesContent":["export const Types = {\r\n  SET_RESTAURANTS: \"restaurants/SET_RESTAURANTS\",\r\n  SET_RESTAURANT: \"restaurants/SET_RESTAURANT\",\r\n};\r\n\r\nconst initialState = {\r\n  restaurants: [],\r\n  restaurantSelected: null,\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case Types.SET_RESTAURANTS:\r\n      return { ...state, restaurants: action.payload };\r\n    case Types.SET_RESTAURANT:\r\n      return { ...state, restaurantSelected: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport function setRestaurants(restaurants) {\r\n  return {\r\n    type: Types.SET_RESTAURANTS,\r\n    payload: restaurants,\r\n  };\r\n}\r\n\r\nexport function setRestaurant(restaurant) {\r\n  return {\r\n    type: Types.SET_RESTAURANT,\r\n    payload: restaurant,\r\n  };\r\n}\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport restaurants from \"../modules/restaurants\";\r\n\r\nexport default combineReducers({\r\n  restaurants,\r\n});\r\n","import { createStore } from \"redux\";\r\n\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nexport default store;\r\n","const theme = {\r\n  colors: {\r\n    primary: \"#6200ee\",\r\n    background: \"#00000014\",\r\n    text: \"#000000B3\",\r\n    sucess: \"#135E01\",\r\n  },\r\n  fonts: {\r\n    regular: \"Roboto, sans-serif\",\r\n  },\r\n};\r\n\r\nexport default theme;\r\n","export default __webpack_public_path__ + \"static/media/logo.4f21662c.svg\";","export default __webpack_public_path__ + \"static/media/restaurante-fake.a2be0fb6.png\";","import React from 'react';\r\nimport styled, { keyframes } from 'styled-components'\r\n\r\nconst KeyFramesLoading = keyframes`\r\n  0% {\r\n    opacity: 0.5;\r\n  }\r\n  100% {\r\n    opacity: 1.0;\r\n  }\r\n`;\r\n\r\nconst LoadingSkeleton = styled.div`\r\n  background-color: #00000014;\r\n  border-radius: 6px;\r\n  margin-top: 10px;\r\n  min-width: ${(props) => props.width};\r\n  height: ${(props) => props.height};\r\n  animation: ${KeyFramesLoading} 500ms infinite alternate;\r\n`;\r\n\r\nexport default ({ width, height }) => <LoadingSkeleton width={width} height={height} />;","import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport Skeleton from '../Skeleton'\r\n\r\nconst Card = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  padding: 0.5rem;\r\n  width: 5rem;\r\n  height: 5rem;\r\n  border-radius: 0.5rem;\r\n  background-image: url(${(props) => props.photo});\r\n  background-size: cover;\r\n`\r\nconst Title = styled.p`\r\n  font-family: ${(props) => props.theme.fonts.regular};\r\n  font-size: 1rem;\r\n  color: #fff;\r\n`\r\n\r\nconst ImageCard = ({ photo, title }) => {\r\n  const [imageLoaded, setImageLoaded] = useState(false);  \r\n  useEffect(() => {\r\n    const imageLoader = new Image(); \r\n    imageLoader.src = photo;\r\n    imageLoader.onload = () => setImageLoaded(true);\r\n  }, [photo]);\r\n\r\n  return(\r\n    <>\r\n    {imageLoaded ? (\r\n      <Card photo={photo}>\r\n        <Title>{title}</Title>\r\n      </ Card>\r\n    ) : <Skeleton width='90px' height='90px' />}\r\n    </>\r\n  )\r\n};\r\n\r\nexport default ImageCard;","import styled from \"styled-components\";\r\n\r\nexport const Restaurant = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  cursor: pointer;\r\n  margin-top: 5px;\r\n  padding: 1rem;\r\n  background-color: #ffffff;\r\n  border-left: 5px solid transparent;\r\n  transition: 0.4s ease;\r\n  :hover {\r\n    background-color: ${(props) => props.theme.colors.background};\r\n    border-left-color: ${(props) => props.theme.colors.primary};\r\n  }\r\n`;\r\n\r\nexport const RestaurantInfo = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const Title = styled.span`\r\n  font-family: ${(props) => props.theme.fonts.regular};\r\n  color: ${(props) => props.theme.colors.text};\r\n  font-size: 1.5rem;\r\n  font-weight: bold;\r\n  line-height: 29px;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nexport const Address = styled.span`\r\n  font-family: ${(props) => props.theme.fonts.regular};\r\n  color: ${(props) => props.theme.colors.text};\r\n  font-size: 1rem;\r\n  line-height: 19px;\r\n  margin-bottom: 10px;\r\n  margin-top: 10px;\r\n`;\r\n\r\nexport const RestaurantPhoto = styled.img`\r\n  width: 100px;\r\n  height: 100px;\r\n  display: ${(props) => (props.imageLoaded ? \"block\" : \"none\")};\r\n  object-fit: cover;\r\n  border-radius: 6px;\r\n`;\r\n","import React, { useState } from 'react';\r\nimport ReactStars from \"react-rating-stars-component\";\r\n\r\nimport restaurante from \"../../assets/restaurante-fake.png\"\r\nimport Skeleton from '../Skeleton'\r\n\r\nimport { Restaurant, RestaurantInfo, Title, Address, RestaurantPhoto } from './styles'\r\n\r\nconst RestaurantCard = ({ restaurant, onClick }) => {\r\n  const [imageLoaded, setImageLoaded] = useState(false);\r\n\r\n  return (\r\n    <Restaurant onClick ={onClick}  >\r\n    <RestaurantInfo>\r\n        <Title>{restaurant.name}</Title>\r\n        <ReactStars count={5}\r\n        isHalf={true} activeColor=\"#e7711c\"\r\n        edit={false} value={restaurant.rating} />\r\n        <Address>{restaurant.vicinity || restaurant.formatted_address}</Address>\r\n      </RestaurantInfo>\r\n      <RestaurantPhoto\r\n      imageLoaded={imageLoaded}\r\n      src={restaurant.photos ? restaurant.photos[0].getUrl() : restaurante}\r\n      onLoad={() => setImageLoaded(true)} alt=\"foto do restaurante\"/>\r\n      {!imageLoaded && <Skeleton width='100px' height=\"100px\"/>}\r\n    </Restaurant> \r\n  );\r\n};\r\n\r\nexport default RestaurantCard;\r\n","import ReactDOM from 'react-dom';\r\n\r\nconst PortalModal = ({ children }) => {\r\n  const portal = document.getElementById('modal-root');\r\n  return ReactDOM.createPortal(children, portal);\r\n};\r\n\r\nexport default PortalModal;","import styled from \"styled-components\";\r\n\r\nexport const Overlay = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  left: 0;\r\n  bottom: 0;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  background: rgba(78, 89, 131, 0.5);\r\n  backdrop-filter: blur(5px);\r\n\r\n  z-index: 999;\r\n`;\r\n\r\nexport const Dialog = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  max-height: calc(100% - 144px);\r\n  width: 500px;\r\n  padding: 1.5rem;\r\n  background-color: #ffffff;\r\n  box-shadow: 0px 0px 32px rgba(78, 89, 131, 0.2);\r\n  border-radius: 0.5rem;\r\n`;\r\n","import React, { useEffect } from 'react';\r\n\r\nimport Portal from './Portal';\r\n\r\nimport { Overlay, Dialog } from './styles';\r\n\r\nconst Modal = ({ children, open, onClose }) => {\r\n  useEffect(() => {\r\n    function onEsc(e) {\r\n      if(e.keyCode === 27) onClose();\r\n    }\r\n\r\n    window.addEventListener('keydown', onEsc);\r\n\r\n    return () => {\r\n      window.removeEventListener('keydown', onEsc);\r\n    };\r\n  }, [onClose]);\r\n\r\n  if(!open) return null;\r\n\r\n  function onOverlayClick() {\r\n    onClose();\r\n  }\r\n\r\n  function onDialogClick(e) {\r\n    e.stopPropagation();\r\n  }\r\n\r\n  return (\r\n    <Portal>\r\n      <Overlay onClick={onOverlayClick}>\r\n        <Dialog onClick={onDialogClick}>{children}</ Dialog>\r\n      </Overlay>\r\n    </ Portal>\r\n  )\r\n}\r\n\r\nexport default Modal;","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { GoogleApiWrapper, Map, Marker } from 'google-maps-react';\r\n\r\nimport { setRestaurants, setRestaurant } from '../../redux/modules/restaurants'\r\n\r\nexport const MapContainer = (props) => {\r\n  const dispatch = useDispatch();\r\n  const { restaurants } = useSelector((state) => state.restaurants);\r\n\r\n  const [map, setMap] = useState(null);\r\n  const { google, query, placeId } = props;\r\n\r\n  useEffect(() => {\r\n    if(query){\r\n      searchByQuery(query);\r\n    }\r\n  }, [query]);\r\n\r\n  useEffect(() => {\r\n    if(placeId){\r\n      getRestaurantById(placeId)\r\n    }\r\n  }, [placeId]);\r\n\r\n  function getRestaurantById(placeId) {\r\n    const service = new google.maps.places.PlacesService(map);\r\n    dispatch(setRestaurant(null));\r\n\r\n    const request = {\r\n      placeId,\r\n      fields: ['name', 'opening_hours', 'formatted_address', 'formatted_phone_number']\r\n    };\r\n\r\n    service.getDetails(request, (place, status) => {\r\n      if(status === google.maps.places.PlacesServiceStatus.OK){\r\n        //console.log('restaurant>>>', place);\r\n        dispatch(setRestaurant(place));\r\n      }\r\n    });\r\n  }\r\n\r\n  function searchByQuery(query) {\r\n    const service = new google.maps.places.PlacesService(map);\r\n    dispatch(setRestaurants([]));\r\n\r\n    const request = {\r\n      location: map.center,\r\n      radius: '400',\r\n      type: ['restaurant'],\r\n      query,\r\n    };\r\n\r\n    service.textSearch(request, (results, status) => {\r\n      if(status === google.maps.places.PlacesServiceStatus.OK){\r\n        //console.log('restaurant>>>', results);\r\n        dispatch(setRestaurants(results));\r\n      }\r\n    });\r\n  }\r\n\r\n  function searchNearby(map, center) {\r\n    const service = new google.maps.places.PlacesService(map);\r\n    dispatch(setRestaurants([]));\r\n\r\n    const request = {\r\n      location: center,\r\n      radius: '20000',\r\n      type: ['restaurant'],\r\n    };\r\n\r\n    service.nearbySearch(request, (results, status) => {\r\n      if(status === google.maps.places.PlacesServiceStatus.OK){\r\n        //console.log('restaurant>>>', results);\r\n        dispatch(setRestaurants(results));\r\n      }\r\n    });\r\n  }\r\n\r\n  function onMapReady(_, map) {\r\n    setMap(map);\r\n    searchNearby(map, map.center);\r\n  }\r\n\r\n  return (\r\n  <Map google={google}\r\n    centerAroundCurrentLocation\r\n    onReady={onMapReady}\r\n    onRecenter={onMapReady}\r\n    {...props}>\r\n      {restaurants.map((restaurant) => (\r\n        <Marker key={restaurant.place_id}\r\n        name ={restaurant.name}\r\n        position={{lat: restaurant.geometry.location.lat(),\r\n        lng: restaurant.geometry.location.lng(),\r\n        }} />\r\n      ))}\r\n    </ Map>\r\n  );  \r\n};\r\n\r\nexport default GoogleApiWrapper({\r\n  apiKey: process.env.REACT_APP_GOOGLE_API_KEY,\r\n  language: 'pt-br',\r\n})(MapContainer);","import React from 'react';\r\nimport Lottie from 'react-lottie';\r\n\r\nimport animationData from '../../assets/restaurants-loading.json';\r\n\r\nexport default () => {\r\n  const defaultOptions = {\r\n    loop: true,\r\n    autoplay: true,\r\n    animationData,\r\n    rendererSettings: {\r\n      preserveAspectRatio: 'xMidYmid slice'\r\n    },\r\n  };\r\n  return <Lottie options={defaultOptions} />;\r\n};","import styled from \"styled-components\";\r\nimport Slider from \"react-slick\";\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n`;\r\n\r\nexport const Container = styled.aside`\r\n  background-color: ${(props) => props.theme.colors.background};\r\n  width: 360px;\r\n  height: 100vh;\r\n  overflow-y: auto;\r\n`;\r\n\r\nexport const Search = styled.section`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  background-color: #ffffff;\r\n  padding: 1rem;\r\n`;\r\n\r\nexport const Logo = styled.img`\r\n  margin-bottom: 1.25rem;\r\n`;\r\n\r\nexport const Map = styled.div`\r\n  background-color: green;\r\n  width: 100vw;\r\n  height: 100vh;\r\n`;\r\n\r\nexport const Carousel = styled(Slider)`\r\n  .slick-slide {\r\n    margin-right: 2rem;\r\n  }\r\n`;\r\n\r\nexport const CarouselTitle = styled.h1`\r\n  font-family: ${(props) => props.theme.fonts.regular};\r\n  color: ${(props) => props.theme.colors.text};\r\n  font-size: 1.5rem;\r\n  font-weight: bold;\r\n  line-height: 2rem;\r\n  margin: 1rem 0;\r\n`;\r\n\r\nexport const ModalTitle = styled.p`\r\n  margin-bottom: 0.75rem;\r\n  letter-spacing: 0.11px;\r\n  font-family: ${(props) => props.theme.fonts.regular};\r\n  color: ${(props) => props.theme.colors.text};\r\n  text-transform: none;\r\n  line-height: 29px;\r\n  font-size: 1.5rem;\r\n  font-weight: bold;\r\n`;\r\n\r\nexport const ModalContent = styled.p`\r\n  margin-bottom: 0.75rem;\r\n  font-family: ${(props) => props.theme.fonts.regular};\r\n  font-weight: normal;\r\n  color: ${(props) => props.theme.colors.text};\r\n  line-height: 19px;\r\n  font-size: 1rem;\r\n`;\r\n","import React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport Slider from \"react-slick\";\r\nimport TextField, { Input } from '@material/react-text-field';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nimport logo from '../../assets/logo.svg'\r\nimport restaurante from '../../assets/restaurante-fake.png'\r\nimport { Card, RestaurantCard, Modal, Map, Loader, Skeleton } from '../../components'\r\n\r\nimport { Container, Search, Logo, Wrapper, CarouselTitle, ModalTitle, ModalContent } from './styles'\r\n\r\nconst Home = () => {\r\n  const [inputValue, setInputValue] = useState('');\r\n  const [query, setQuery] = useState(null);\r\n  const [placeId, setPlaceId] = useState(null)\r\n  const [modalOpened, setModalOpened] = useState(false);\r\n  const { restaurants, restaurantSelected } = useSelector((state) => state.restaurants);\r\n\r\n  const settings = {\r\n    dots: false,\r\n    infinite: true,\r\n    autoplay: true,\r\n    speed: 300,\r\n    slidesToShow: 3,\r\n    slidesToScroll: 3,\r\n    adaptiveheight: true,\r\n  };\r\n\r\n  function handleKeyPress(e) {\r\n    if(e.key === 'Enter') {\r\n      setQuery(inputValue);\r\n    }\r\n  }\r\n\r\n  function handleOpenModal(placeId) {\r\n    setPlaceId(placeId);\r\n    setModalOpened(true);\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Container>\r\n        <Search>\r\n        <Logo src={logo} alt=\"Logo do restaurante\" />\r\n          <TextField\r\n             label='Pesquisar Restaurantes'\r\n             outlined\r\n             trailingIcon={<SearchIcon role=\"button\" icon=\"search\"/>}\r\n            ><Input\r\n               value={inputValue}\r\n               onKeyPress={handleKeyPress}\r\n               onChange={(e) => setInputValue(e.target.value)} />\r\n            </TextField>\r\n            {restaurants.length > 0 ? (\r\n            <>\r\n            <CarouselTitle>\r\n             Na sua Área\r\n            </CarouselTitle>\r\n            <Slider {...settings}>\r\n              {restaurants.map((restaurant) =>\r\n              <Card\r\n              key={restaurant.place_id}\r\n              photo={restaurant.photos ? restaurant.photos[0].getUrl() : restaurante} title=  {restaurant.name} />)}\r\n              </Slider>\r\n            </>\r\n            ) : (<Loader />)}\r\n        </Search>\r\n\r\n        {restaurants.map(\r\n          (restaurant) => (<RestaurantCard\r\n            onClick={() => handleOpenModal(restaurant.place_id)}\r\n            restaurant={restaurant}/>\r\n        ))}\r\n\r\n      </Container>\r\n      <Map query={query} placeId={placeId} />\r\n      <Modal open={modalOpened} onClose={() => setModalOpened(!modalOpened)}>\r\n        {restaurantSelected ? (\r\n          <>\r\n            <ModalTitle>{restaurantSelected?.name}</ModalTitle>\r\n            <ModalContent>{restaurantSelected?.formatted_phone_number}</ModalContent>\r\n            <ModalContent>{restaurantSelected?.formatted_address}</ModalContent>\r\n            <ModalContent>{restaurantSelected?.opening_hours?.open_now ? 'Aberto agora :)'\r\n        : 'Infelizmente esta fechado no momento :('}</ModalContent>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Skeleton width='10px' height=\"10px\" />\r\n            <Skeleton width='10px' height=\"10px\" />\r\n            <Skeleton width='10px' height=\"10px\" />\r\n            <Skeleton width='10px' height=\"10px\" />\r\n          </>  \r\n        )}\r\n      </ Modal>\r\n    </Wrapper>  \r\n  );\r\n}\r\n\r\nexport default Home;","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { ThemeProvider } from \"styled-components\";\nimport { Reset } from \"styled-reset\";\n\nimport store from \"./redux/store\";\nimport theme from \"./theme\";\nimport Home from \"./pages/Home\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <Reset />\n        <Home />\n      </ThemeProvider>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"@material/react-text-field/dist/text-field.css\";\n//import \"@material/react-material-icon/dist/material-icon.css\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}